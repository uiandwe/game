{"ts":1361067642249,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361067644848,"patch":[[{"diffs":[[1,"var COLS = 10, ROWS = 20;\nvar board = [];\nvar lose;\nvar interval;\nvar current, currentX, currentY;\nvar shapes = [\n    [ 1, 1, 1, 1 ],\n    [ 1, 1, 1, 0,\n      1 ],\n    [ 1, 1, 1, 0,\n      0, 0, 1 ],\n    [ 1, 1, 0, 0,\n      1, 1 ],\n    [ 1, 1, 0, 0,\n      0, 1, 1 ],\n    [ 0, 1, 1, 0,\n      1, 1 ],\n    [ 0, 1, 0, 0,\n      1, 1, 1 ]\n];\nvar colors = [\n    'cyan', 'orange', 'blue', 'yellow', 'red', 'green', 'purple'\n];\n\nfunction newShape() {\n    var id = Math.floor( Math.random() * shapes.length );\n    var shape = shapes[ id ];\n\n    current = [];\n    for ( var y = 0; y < 4; ++y ) {\n        current[ y ] = [];\n        for ( var x = 0; x < 4; ++x ) {\n            var i = 4 * y + x;\n            if ( typeof shape[ i ] != 'undefined' && shape[ i ] ) {\n                current[ y ][ x ] = id + 1;\n            }\n            else {\n                current[ y ][ x ] = 0;\n            }\n        }\n    }\n    currentX = 5;\n    currentY = 0;\n}\n\nfunction init() {\n    for ( var y = 0; y < ROWS; ++y ) {\n        board[ y ] = [];\n        for ( var x = 0; x < COLS; ++x ) {\n            board[ y ][ x ] = 0;\n        }\n    }\n}\n\nfunction tick() {\n    if ( valid( 0, 1 ) ) {\n        ++currentY;\n    }\n    else {\n        freeze();\n        clearLines();\n        if (lose) {\n            newGame();\n            return false;\n        }    \n        newShape();\n    }\n}\n\nfunction freeze() {\n    for ( var y = 0; y < 4; ++y ) {\n        for ( var x = 0; x < 4; ++x ) {\n            if ( current[ y ][ x ] ) {\n                board[ y + currentY ][ x + currentX ] = current[ y ][ x ];\n            }\n        }\n    }\n}\n\nfunction rotate( current ) {\n    var newCurrent = [];\n    for ( var y = 0; y < 4; ++y ) {\n        newCurrent[ y ] = [];\n        for ( var x = 0; x < 4; ++x ) {\n            newCurrent[ y ][ x ] = current[ 3 - x ][ y ];\n        }\n    }\n\n    return newCurrent;\n}\n\nfunction clearLines() {\n    for ( var y = ROWS - 1; y >= 0; --y ) {\n        var row = true;\n        for ( var x = 0; x < COLS; ++x ) {\n            if ( board[ y ][ x ] == 0 ) {\n                row = false;\n                break;\n            }\n        }\n        if ( row ) {\n            for ( var yy = y; yy > 0; --yy ) {\n                for ( var x = 0; x < COLS; ++x ) {\n                    board[ yy ][ x ] = board[ yy - 1 ][ x ];\n                }\n            }\n            ++y;\n        }\n    }\n}\n\nfunction keyPress( key ) {\n    switch ( key ) {\n        case 'left':\n            if ( valid( -1 ) ) {\n                --currentX;\n            }\n            break;\n        case 'right':\n            if ( valid( 1 ) ) {\n                ++currentX;\n            }\n            break;\n        case 'down':\n            if ( valid( 0, 1 ) ) {\n                ++currentY;\n            }\n            break;\n        case 'rotate':\n            var rotated = rotate( current );\n            if ( valid( 0, 0, rotated ) ) {\n                current = rotated;\n            }\n            break;\n    }\n}\n\nfunction valid( offsetX, offsetY, newCurrent ) {\n    offsetX = offsetX || 0;\n    offsetY = offsetY || 0;\n    offsetX = currentX + offsetX;\n    offsetY = currentY + offsetY;\n    newCurrent = newCurrent || current;\n\n\n\n    for ( var y = 0; y < 4; ++y ) {\n        for ( var x = 0; x < 4; ++x ) {\n            if ( newCurrent[ y ][ x ] ) {\n                if ( typeof board[ y + offsetY ] == 'undefined'\n                  || typeof board[ y + offsetY ][ x + offsetX ] == 'undefined'\n                  || board[ y + offsetY ][ x + offsetX ]\n                  || x + offsetX < 0\n                  || y + offsetY >= ROWS\n                  || x + offsetX >= COLS ) {\n                    if (offsetY == 1) lose = true;\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n\nfunction newGame() {\n    clearInterval(interval);\n    init();\n    newShape();\n    lose = false;\n    interval = setInterval( tick, 250 );\n}\n\nnewGame();"]],"start1":0,"start2":0,"length1":0,"length2":3894}]],"length":3894,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361083528757,"patch":[[{"diffs":[[0,"rrentY;\n"],[1,"var current_ready;\nvar block= [];  //생성될 객체 배열 [0] = 현재 블럭 , [1] = 다음블럭\n"],[0,"var shap"]],"start1":91,"start2":91,"length1":16,"length2":88},{"diffs":[[0," shapes = [\n"],[-1,""],[0,"    [ 1, 1, "]],"start1":174,"start2":174,"length1":24,"length2":24},{"diffs":[[0," 1 ]\n];\n"],[1,"\n"],[0,"var colo"]],"start1":398,"start2":398,"length1":16,"length2":17},{"diffs":[[0,"le'\n];\n\n"],[1,"//블럭 생성\n"],[0,"function"]],"start1":483,"start2":483,"length1":16,"length2":24},{"diffs":[[0,"ion "],[-1,"new"],[1,"ready"],[0,"Shape()"],[-1," "],[0,"{"],[1,"\n    currentPush();"],[0,"\n   "]],"start1":504,"start2":504,"length1":20,"length2":40},{"diffs":[[0,"s.length );\n"],[1,"    block[1] = id;\n     return block[0];\n}\n\n//블럭 push \nfunction currentPush(){\n    var temp = block[1];\n    block[0] = temp;    \n}\n\nfunction newShape() {\n    var id = readyShape();\n"],[0,"    var shap"]],"start1":587,"start2":587,"length1":24,"length2":205},{"diffs":[[0,"  current = [];\n"],[1,"  \n"],[0,"    for ( var y "]],"start1":813,"start2":813,"length1":32,"length2":35},{"diffs":[[0,"rent[ y ] = [];\n"],[1,"       \n"],[0,"        for ( va"]],"start1":879,"start2":879,"length1":32,"length2":40},{"diffs":[[0,"id + 1;\n"],[1,"             \n"],[0,"        "]],"start1":1078,"start2":1078,"length1":16,"length2":30},{"diffs":[[0,"[ y ][ x ] = 0;\n"],[1,"              \n"],[0,"            }\n  "]],"start1":1156,"start2":1156,"length1":32,"length2":47},{"diffs":[[0,"    }\n    }\n"],[1,"    //시작위치 4, 0 (상단 중앙)\n"],[0,"    currentX"]],"start1":1205,"start2":1205,"length1":24,"length2":48},{"diffs":[[0,"rentX = "],[-1,"5"],[1,"4"],[0,";\n    cu"]],"start1":1248,"start2":1248,"length1":17,"length2":17},{"diffs":[[0," = 0;\n        }\n"],[-1,""],[0,"    }\n"],[1,"    \n    //처음 블럭 배열 초기화\n    var id = Math.floor( Math.random() * shapes.length );\n    block[1] = id;\n"],[0,"}\n\nfunction tick"]],"start1":1432,"start2":1432,"length1":38,"length2":139}]],"length":4341,"saved":false}
{"ts":1361083567859,"patch":[[{"diffs":[[0,"= [];\n  "],[1,"  current_ready = [];"],[0,"\n"],[-1,""],[0,"    for "]],"start1":823,"start2":823,"length1":17,"length2":38},{"diffs":[[0," [];\n       "],[1," current_ready[ y ] = [];"],[0,"\n        for"]],"start1":911,"start2":911,"length1":24,"length2":49},{"diffs":[[0,"1;\n             "],[1,"   current_ready[ y ] = [];"],[0,"\n            }\n "]],"start1":1129,"start2":1129,"length1":32,"length2":59},{"diffs":[[0,"[ y ][ x ] = 0;\n"],[-1,""],[0,"              \n "]],"start1":1229,"start2":1229,"length1":32,"length2":32},{"diffs":[[0,"            "],[1,"  current_ready[ y ][ x ] = 0;"],[0,"\n           "]],"start1":1247,"start2":1247,"length1":24,"length2":54}]],"length":4444,"saved":false}
{"ts":1361083580438,"patch":[[{"diffs":[[0,"rrent_ready[ y ]"],[-1," = []"],[1,"[ x ] = id + 1"],[0,";\n            }\n"]],"start1":1150,"start2":1150,"length1":37,"length2":46}]],"length":4453,"saved":false}
{"ts":1361083640831,"patch":[[{"diffs":[[0,"    "],[-1," return block[0];"],[0,"\n}\n\n"]],"start1":618,"start2":618,"length1":25,"length2":8},{"diffs":[[0,"() {\n   "],[-1," var id ="],[0," readySh"]],"start1":731,"start2":731,"length1":25,"length2":16},{"diffs":[[0,"adyShape();\n"],[1,"    var id =  block[0];\n"],[0,"    var shap"]],"start1":742,"start2":742,"length1":24,"length2":48}]],"length":4451,"saved":false}
{"ts":1361083681385,"patch":[[{"diffs":[[0,"adyShape();\n"],[1,"    \n"],[0,"    var id ="]],"start1":742,"start2":742,"length1":24,"length2":29},{"diffs":[[0,"var "],[-1,"shape = shapes[ id"],[1,"id_ready = block[1];\n    \n    var shape = shapes[ id ];\n    var shape_ready = shapes[ id_ready"],[0," ];\n"]],"start1":787,"start2":787,"length1":26,"length2":102}]],"length":4532,"saved":false}
{"ts":1361083770852,"patch":[[{"diffs":[[0," 1;\n"],[-1,"                current_ready[ y ][ x ] = id + 1;\n"],[0,"    "]],"start1":1207,"start2":1207,"length1":58,"length2":8},{"diffs":[[0,"[ y ][ x ] = 0;\n"],[1,"            }\n            \n            \n            if ( typeof shape_ready[ i ] != 'undefined' && shape_ready[ i ] ) {\n                current_ready[ y ][ x ] = id_ready + 1;\n            }\n            else {\n"],[0,"                "]],"start1":1267,"start2":1267,"length1":32,"length2":241},{"diffs":[[0,"0;\n            }"],[-1,""],[0,""],[1,"\n            "],[0,"\n        }\n    }"]],"start1":1534,"start2":1534,"length1":32,"length2":45}]],"length":4704,"saved":false}
